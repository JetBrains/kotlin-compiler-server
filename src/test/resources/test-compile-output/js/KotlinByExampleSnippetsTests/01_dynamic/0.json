{"jsCode":"//region block: polyfills\n(function () {\n  if (typeof globalThis === 'object')\n    return;\n  Object.defineProperty(Object.prototype, '__magic__', {get: function () {\n    return this;\n  }, configurable: true});\n  __magic__.globalThis = __magic__;\n  delete Object.prototype.__magic__;\n}());\nif (typeof Math.imul === 'undefined') {\n  Math.imul = function imul(a, b) {\n    return (a & 4.29490176E9) * (b & 65535) + (a & 65535) * (b | 0) | 0;\n  };\n}\nif (typeof ArrayBuffer.isView === 'undefined') {\n  ArrayBuffer.isView = function (a) {\n    return a != null && a.__proto__ != null && a.__proto__.__proto__ === Int8Array.prototype.__proto__;\n  };\n}\n//endregion\n(function (factory) {\n  if (typeof define === 'function' && define.amd)\n    define(['exports'], factory);\n  else if (typeof exports === 'object')\n    factory(module.exports);\n  else\n    globalThis.playground = factory(typeof playground === 'undefined' ? {} : playground);\n}(function (_) {\n  'use strict';\n  //region block: imports\n  var imul = Math.imul;\n  var isView = ArrayBuffer.isView;\n  //endregion\n  //region block: pre-declaration\n  initMetadataForClass(Number_0, 'Number');\n  initMetadataForCompanion(Companion);\n  initMetadataForClass(Long, 'Long', VOID, Number_0);\n  initMetadataForInterface(FunctionAdapter, 'FunctionAdapter');\n  initMetadataForInterface(Comparator, 'Comparator');\n  initMetadataForObject(Unit, 'Unit');\n  initMetadataForClass(BaseOutput, 'BaseOutput');\n  initMetadataForClass(NodeJsOutput, 'NodeJsOutput', VOID, BaseOutput);\n  initMetadataForClass(BufferedOutput, 'BufferedOutput', BufferedOutput, BaseOutput);\n  initMetadataForClass(BufferedOutputToConsoleLog, 'BufferedOutputToConsoleLog', BufferedOutputToConsoleLog, BufferedOutput);\n  initMetadataForClass(Exception, 'Exception', Exception_init_$Create$, Error);\n  initMetadataForClass(RuntimeException, 'RuntimeException', RuntimeException_init_$Create$, Exception);\n  initMetadataForClass(ClassCastException, 'ClassCastException', ClassCastException_init_$Create$, RuntimeException);\n  initMetadataForClass(sam$kotlin_Comparator$0, 'sam$kotlin_Comparator$0', VOID, VOID, [Comparator, FunctionAdapter]);\n  //endregion\n  function Number_0() {\n  }\n  function _get_value__a43j40($this) {\n    return $this;\n  }\n  function Char__compareTo_impl_ypi4mb($this, other) {\n    return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;\n  }\n  function Char__toInt_impl_vasixd($this) {\n    return _get_value__a43j40($this);\n  }\n  function toString($this) {\n    // Inline function 'kotlin.js.unsafeCast' call\n    return String.fromCharCode(_get_value__a43j40($this));\n  }\n  function Companion() {\n    Companion_instance = this;\n    this.MIN_VALUE_1 = new Long(0, -2147483648);\n    this.MAX_VALUE_1 = new Long(-1, 2147483647);\n    this.SIZE_BYTES_1 = 8;\n    this.SIZE_BITS_1 = 64;\n  }\n  var Companion_instance;\n  function Companion_getInstance() {\n    if (Companion_instance == null)\n      new Companion();\n    return Companion_instance;\n  }\n  function Long(low, high) {\n    Companion_getInstance();\n    Number_0.call(this);\n    this.low_1 = low;\n    this.high_1 = high;\n  }\n  protoOf(Long).compareTo_kvbqny_k$ = function (other) {\n    return compare(this, other);\n  };\n  protoOf(Long).compareTo_hpufkf_k$ = function (other) {\n    return this.compareTo_kvbqny_k$(other instanceof Long ? other : THROW_CCE());\n  };\n  protoOf(Long).plus_eydew_k$ = function (other) {\n    return add(this, other);\n  };\n  protoOf(Long).div_et91rl_k$ = function (other) {\n    return divide(this, other);\n  };\n  protoOf(Long).unaryMinus_6uz0qp_k$ = function () {\n    return this.inv_28kx_k$().plus_eydew_k$(new Long(1, 0));\n  };\n  protoOf(Long).inv_28kx_k$ = function () {\n    return new Long(~this.low_1, ~this.high_1);\n  };\n  protoOf(Long).toInt_1tsl84_k$ = function () {\n    return this.low_1;\n  };\n  protoOf(Long).toDouble_ygsx0s_k$ = function () {\n    return toNumber(this);\n  };\n  protoOf(Long).toString = function () {\n    return toStringImpl(this, 10);\n  };\n  protoOf(Long).equals = function (other) {\n    var tmp;\n    if (other instanceof Long) {\n      tmp = equalsLong(this, other);\n    } else {\n      tmp = false;\n    }\n    return tmp;\n  };\n  protoOf(Long).valueOf = function () {\n    return this.toDouble_ygsx0s_k$();\n  };\n  function implement(interfaces) {\n    var maxSize = 1;\n    var masks = [];\n    var inductionVariable = 0;\n    var last = interfaces.length;\n    while (inductionVariable < last) {\n      var i = interfaces[inductionVariable];\n      inductionVariable = inductionVariable + 1 | 0;\n      var currentSize = maxSize;\n      var tmp0_elvis_lhs = i.prototype.$imask$;\n      var imask = tmp0_elvis_lhs == null ? i.$imask$ : tmp0_elvis_lhs;\n      if (!(imask == null)) {\n        masks.push(imask);\n        currentSize = imask.length;\n      }\n      var iid = i.$metadata$.iid;\n      var tmp;\n      if (iid == null) {\n        tmp = null;\n      } else {\n        // Inline function 'kotlin.let' call\n        tmp = bitMaskWith(iid);\n      }\n      var iidImask = tmp;\n      if (!(iidImask == null)) {\n        masks.push(iidImask);\n        currentSize = Math.max(currentSize, iidImask.length);\n      }\n      if (currentSize > maxSize) {\n        maxSize = currentSize;\n      }\n    }\n    return compositeBitMask(maxSize, masks);\n  }\n  function bitMaskWith(activeBit) {\n    var numberIndex = activeBit >> 5;\n    var intArray = new Int32Array(numberIndex + 1 | 0);\n    var positionInNumber = activeBit & 31;\n    var numberWithSettledBit = 1 << positionInNumber;\n    intArray[numberIndex] = intArray[numberIndex] | numberWithSettledBit;\n    return intArray;\n  }\n  function compositeBitMask(capacity, masks) {\n    var tmp = 0;\n    var tmp_0 = new Int32Array(capacity);\n    while (tmp < capacity) {\n      var tmp_1 = tmp;\n      var result = 0;\n      var inductionVariable = 0;\n      var last = masks.length;\n      while (inductionVariable < last) {\n        var mask = masks[inductionVariable];\n        inductionVariable = inductionVariable + 1 | 0;\n        if (tmp_1 < mask.length) {\n          result = result | mask[tmp_1];\n        }\n      }\n      tmp_0[tmp_1] = result;\n      tmp = tmp + 1 | 0;\n    }\n    return tmp_0;\n  }\n  function isBitSet(_this__u8e3s4, possibleActiveBit) {\n    var numberIndex = possibleActiveBit >> 5;\n    if (numberIndex > _this__u8e3s4.length)\n      return false;\n    var positionInNumber = possibleActiveBit & 31;\n    var numberWithSettledBit = 1 << positionInNumber;\n    return !((_this__u8e3s4[numberIndex] & numberWithSettledBit) === 0);\n  }\n  function FunctionAdapter() {\n  }\n  function charCodeAt(_this__u8e3s4, index) {\n    // Inline function 'kotlin.js.asDynamic' call\n    return _this__u8e3s4.charCodeAt(index);\n  }\n  function compareTo(a, b) {\n    var tmp;\n    switch (typeof a) {\n      case 'number':\n        var tmp_0;\n        if (typeof b === 'number') {\n          tmp_0 = doubleCompareTo(a, b);\n        } else {\n          if (b instanceof Long) {\n            tmp_0 = doubleCompareTo(a, b.toDouble_ygsx0s_k$());\n          } else {\n            tmp_0 = primitiveCompareTo(a, b);\n          }\n        }\n\n        tmp = tmp_0;\n        break;\n      case 'string':\n      case 'boolean':\n        tmp = primitiveCompareTo(a, b);\n        break;\n      default:\n        tmp = compareToDoNotIntrinsicify(a, b);\n        break;\n    }\n    return tmp;\n  }\n  function doubleCompareTo(a, b) {\n    var tmp;\n    if (a < b) {\n      tmp = -1;\n    } else if (a > b) {\n      tmp = 1;\n    } else if (a === b) {\n      var tmp_0;\n      if (a !== 0) {\n        tmp_0 = 0;\n      } else {\n        // Inline function 'kotlin.js.asDynamic' call\n        var ia = 1 / a;\n        var tmp_1;\n        // Inline function 'kotlin.js.asDynamic' call\n        if (ia === 1 / b) {\n          tmp_1 = 0;\n        } else {\n          if (ia < 0) {\n            tmp_1 = -1;\n          } else {\n            tmp_1 = 1;\n          }\n        }\n        tmp_0 = tmp_1;\n      }\n      tmp = tmp_0;\n    } else if (a !== a) {\n      tmp = b !== b ? 0 : 1;\n    } else {\n      tmp = -1;\n    }\n    return tmp;\n  }\n  function primitiveCompareTo(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n  function compareToDoNotIntrinsicify(a, b) {\n    return a.compareTo_hpufkf_k$(b);\n  }\n  function objectCreate(proto) {\n    proto = proto === VOID ? null : proto;\n    return Object.create(proto);\n  }\n  function defineProp(obj, name, getter, setter) {\n    return Object.defineProperty(obj, name, {configurable: true, get: getter, set: setter});\n  }\n  function toString_0(o) {\n    var tmp;\n    if (o == null) {\n      tmp = 'null';\n    } else if (isArrayish(o)) {\n      tmp = '[...]';\n    } else if (!(typeof o.toString === 'function')) {\n      tmp = anyToString(o);\n    } else {\n      // Inline function 'kotlin.js.unsafeCast' call\n      tmp = o.toString();\n    }\n    return tmp;\n  }\n  function anyToString(o) {\n    return Object.prototype.toString.call(o);\n  }\n  function equals(obj1, obj2) {\n    if (obj1 == null) {\n      return obj2 == null;\n    }\n    if (obj2 == null) {\n      return false;\n    }\n    if (typeof obj1 === 'object' && typeof obj1.equals === 'function') {\n      return obj1.equals(obj2);\n    }\n    if (obj1 !== obj1) {\n      return obj2 !== obj2;\n    }\n    if (typeof obj1 === 'number' && typeof obj2 === 'number') {\n      var tmp;\n      if (obj1 === obj2) {\n        var tmp_0;\n        if (obj1 !== 0) {\n          tmp_0 = true;\n        } else {\n          // Inline function 'kotlin.js.asDynamic' call\n          var tmp_1 = 1 / obj1;\n          // Inline function 'kotlin.js.asDynamic' call\n          tmp_0 = tmp_1 === 1 / obj2;\n        }\n        tmp = tmp_0;\n      } else {\n        tmp = false;\n      }\n      return tmp;\n    }\n    return obj1 === obj2;\n  }\n  function captureStack(instance, constructorFunction) {\n    if (Error.captureStackTrace != null) {\n      Error.captureStackTrace(instance, constructorFunction);\n    } else {\n      // Inline function 'kotlin.js.asDynamic' call\n      instance.stack = (new Error()).stack;\n    }\n  }\n  function protoOf(constructor) {\n    return constructor.prototype;\n  }\n  function extendThrowable(this_, message, cause) {\n    Error.call(this_);\n    setPropertiesToThrowableInstance(this_, message, cause);\n  }\n  function setPropertiesToThrowableInstance(this_, message, cause) {\n    var errorInfo = calculateErrorInfo(Object.getPrototypeOf(this_));\n    if ((errorInfo & 1) === 0) {\n      var tmp;\n      if (message == null) {\n        var tmp_0;\n        if (!(message === null)) {\n          var tmp1_elvis_lhs = cause == null ? null : cause.toString();\n          tmp_0 = tmp1_elvis_lhs == null ? VOID : tmp1_elvis_lhs;\n        } else {\n          tmp_0 = VOID;\n        }\n        tmp = tmp_0;\n      } else {\n        tmp = message;\n      }\n      this_.message = tmp;\n    }\n    if ((errorInfo & 2) === 0) {\n      this_.cause = cause;\n    }\n    this_.name = Object.getPrototypeOf(this_).constructor.name;\n  }\n  function THROW_CCE() {\n    throw ClassCastException_init_$Create$();\n  }\n  function get_ZERO() {\n    _init_properties_longJs_kt__elc2w5();\n    return ZERO;\n  }\n  var ZERO;\n  function get_ONE() {\n    _init_properties_longJs_kt__elc2w5();\n    return ONE;\n  }\n  var ONE;\n  function get_NEG_ONE() {\n    _init_properties_longJs_kt__elc2w5();\n    return NEG_ONE;\n  }\n  var NEG_ONE;\n  function get_MAX_VALUE() {\n    _init_properties_longJs_kt__elc2w5();\n    return MAX_VALUE;\n  }\n  var MAX_VALUE;\n  function get_MIN_VALUE() {\n    _init_properties_longJs_kt__elc2w5();\n    return MIN_VALUE;\n  }\n  var MIN_VALUE;\n  function get_TWO_PWR_24_() {\n    _init_properties_longJs_kt__elc2w5();\n    return TWO_PWR_24_;\n  }\n  var TWO_PWR_24_;\n  function compare(_this__u8e3s4, other) {\n    _init_properties_longJs_kt__elc2w5();\n    if (equalsLong(_this__u8e3s4, other)) {\n      return 0;\n    }\n    var thisNeg = isNegative(_this__u8e3s4);\n    var otherNeg = isNegative(other);\n    return thisNeg && !otherNeg ? -1 : !thisNeg && otherNeg ? 1 : isNegative(subtract(_this__u8e3s4, other)) ? -1 : 1;\n  }\n  function add(_this__u8e3s4, other) {\n    _init_properties_longJs_kt__elc2w5();\n    var a48 = _this__u8e3s4.high_1 >>> 16 | 0;\n    var a32 = _this__u8e3s4.high_1 & 65535;\n    var a16 = _this__u8e3s4.low_1 >>> 16 | 0;\n    var a00 = _this__u8e3s4.low_1 & 65535;\n    var b48 = other.high_1 >>> 16 | 0;\n    var b32 = other.high_1 & 65535;\n    var b16 = other.low_1 >>> 16 | 0;\n    var b00 = other.low_1 & 65535;\n    var c48 = 0;\n    var c32 = 0;\n    var c16 = 0;\n    var c00 = 0;\n    c00 = c00 + (a00 + b00 | 0) | 0;\n    c16 = c16 + (c00 >>> 16 | 0) | 0;\n    c00 = c00 & 65535;\n    c16 = c16 + (a16 + b16 | 0) | 0;\n    c32 = c32 + (c16 >>> 16 | 0) | 0;\n    c16 = c16 & 65535;\n    c32 = c32 + (a32 + b32 | 0) | 0;\n    c48 = c48 + (c32 >>> 16 | 0) | 0;\n    c32 = c32 & 65535;\n    c48 = c48 + (a48 + b48 | 0) | 0;\n    c48 = c48 & 65535;\n    return new Long(c16 << 16 | c00, c48 << 16 | c32);\n  }\n  function subtract(_this__u8e3s4, other) {\n    _init_properties_longJs_kt__elc2w5();\n    return add(_this__u8e3s4, other.unaryMinus_6uz0qp_k$());\n  }\n  function multiply(_this__u8e3s4, other) {\n    _init_properties_longJs_kt__elc2w5();\n    if (isZero(_this__u8e3s4)) {\n      return get_ZERO();\n    } else if (isZero(other)) {\n      return get_ZERO();\n    }\n    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {\n      return isOdd(other) ? get_MIN_VALUE() : get_ZERO();\n    } else if (equalsLong(other, get_MIN_VALUE())) {\n      return isOdd(_this__u8e3s4) ? get_MIN_VALUE() : get_ZERO();\n    }\n    if (isNegative(_this__u8e3s4)) {\n      var tmp;\n      if (isNegative(other)) {\n        tmp = multiply(negate(_this__u8e3s4), negate(other));\n      } else {\n        tmp = negate(multiply(negate(_this__u8e3s4), other));\n      }\n      return tmp;\n    } else if (isNegative(other)) {\n      return negate(multiply(_this__u8e3s4, negate(other)));\n    }\n    if (lessThan(_this__u8e3s4, get_TWO_PWR_24_()) && lessThan(other, get_TWO_PWR_24_())) {\n      return fromNumber(toNumber(_this__u8e3s4) * toNumber(other));\n    }\n    var a48 = _this__u8e3s4.high_1 >>> 16 | 0;\n    var a32 = _this__u8e3s4.high_1 & 65535;\n    var a16 = _this__u8e3s4.low_1 >>> 16 | 0;\n    var a00 = _this__u8e3s4.low_1 & 65535;\n    var b48 = other.high_1 >>> 16 | 0;\n    var b32 = other.high_1 & 65535;\n    var b16 = other.low_1 >>> 16 | 0;\n    var b00 = other.low_1 & 65535;\n    var c48 = 0;\n    var c32 = 0;\n    var c16 = 0;\n    var c00 = 0;\n    c00 = c00 + imul(a00, b00) | 0;\n    c16 = c16 + (c00 >>> 16 | 0) | 0;\n    c00 = c00 & 65535;\n    c16 = c16 + imul(a16, b00) | 0;\n    c32 = c32 + (c16 >>> 16 | 0) | 0;\n    c16 = c16 & 65535;\n    c16 = c16 + imul(a00, b16) | 0;\n    c32 = c32 + (c16 >>> 16 | 0) | 0;\n    c16 = c16 & 65535;\n    c32 = c32 + imul(a32, b00) | 0;\n    c48 = c48 + (c32 >>> 16 | 0) | 0;\n    c32 = c32 & 65535;\n    c32 = c32 + imul(a16, b16) | 0;\n    c48 = c48 + (c32 >>> 16 | 0) | 0;\n    c32 = c32 & 65535;\n    c32 = c32 + imul(a00, b32) | 0;\n    c48 = c48 + (c32 >>> 16 | 0) | 0;\n    c32 = c32 & 65535;\n    c48 = c48 + (((imul(a48, b00) + imul(a32, b16) | 0) + imul(a16, b32) | 0) + imul(a00, b48) | 0) | 0;\n    c48 = c48 & 65535;\n    return new Long(c16 << 16 | c00, c48 << 16 | c32);\n  }\n  function divide(_this__u8e3s4, other) {\n    _init_properties_longJs_kt__elc2w5();\n    if (isZero(other)) {\n      throw Exception_init_$Create$_0('division by zero');\n    } else if (isZero(_this__u8e3s4)) {\n      return get_ZERO();\n    }\n    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {\n      if (equalsLong(other, get_ONE()) || equalsLong(other, get_NEG_ONE())) {\n        return get_MIN_VALUE();\n      } else if (equalsLong(other, get_MIN_VALUE())) {\n        return get_ONE();\n      } else {\n        var halfThis = shiftRight(_this__u8e3s4, 1);\n        var approx = shiftLeft(halfThis.div_et91rl_k$(other), 1);\n        if (equalsLong(approx, get_ZERO())) {\n          return isNegative(other) ? get_ONE() : get_NEG_ONE();\n        } else {\n          var rem = subtract(_this__u8e3s4, multiply(other, approx));\n          return add(approx, rem.div_et91rl_k$(other));\n        }\n      }\n    } else if (equalsLong(other, get_MIN_VALUE())) {\n      return get_ZERO();\n    }\n    if (isNegative(_this__u8e3s4)) {\n      var tmp;\n      if (isNegative(other)) {\n        tmp = negate(_this__u8e3s4).div_et91rl_k$(negate(other));\n      } else {\n        tmp = negate(negate(_this__u8e3s4).div_et91rl_k$(other));\n      }\n      return tmp;\n    } else if (isNegative(other)) {\n      return negate(_this__u8e3s4.div_et91rl_k$(negate(other)));\n    }\n    var res = get_ZERO();\n    var rem_0 = _this__u8e3s4;\n    while (greaterThanOrEqual(rem_0, other)) {\n      var approxDouble = toNumber(rem_0) / toNumber(other);\n      var approx2 = Math.max(1.0, Math.floor(approxDouble));\n      var log2 = Math.ceil(Math.log(approx2) / Math.LN2);\n      var delta = log2 <= 48 ? 1.0 : Math.pow(2.0, log2 - 48);\n      var approxRes = fromNumber(approx2);\n      var approxRem = multiply(approxRes, other);\n      while (isNegative(approxRem) || greaterThan(approxRem, rem_0)) {\n        approx2 = approx2 - delta;\n        approxRes = fromNumber(approx2);\n        approxRem = multiply(approxRes, other);\n      }\n      if (isZero(approxRes)) {\n        approxRes = get_ONE();\n      }\n      res = add(res, approxRes);\n      rem_0 = subtract(rem_0, approxRem);\n    }\n    return res;\n  }\n  function shiftLeft(_this__u8e3s4, numBits) {\n    _init_properties_longJs_kt__elc2w5();\n    var numBits_0 = numBits & 63;\n    if (numBits_0 === 0) {\n      return _this__u8e3s4;\n    } else {\n      if (numBits_0 < 32) {\n        return new Long(_this__u8e3s4.low_1 << numBits_0, _this__u8e3s4.high_1 << numBits_0 | (_this__u8e3s4.low_1 >>> (32 - numBits_0 | 0) | 0));\n      } else {\n        return new Long(0, _this__u8e3s4.low_1 << (numBits_0 - 32 | 0));\n      }\n    }\n  }\n  function shiftRight(_this__u8e3s4, numBits) {\n    _init_properties_longJs_kt__elc2w5();\n    var numBits_0 = numBits & 63;\n    if (numBits_0 === 0) {\n      return _this__u8e3s4;\n    } else {\n      if (numBits_0 < 32) {\n        return new Long(_this__u8e3s4.low_1 >>> numBits_0 | 0 | _this__u8e3s4.high_1 << (32 - numBits_0 | 0), _this__u8e3s4.high_1 >> numBits_0);\n      } else {\n        return new Long(_this__u8e3s4.high_1 >> (numBits_0 - 32 | 0), _this__u8e3s4.high_1 >= 0 ? 0 : -1);\n      }\n    }\n  }\n  function toNumber(_this__u8e3s4) {\n    _init_properties_longJs_kt__elc2w5();\n    return _this__u8e3s4.high_1 * 4.294967296E9 + getLowBitsUnsigned(_this__u8e3s4);\n  }\n  function toStringImpl(_this__u8e3s4, radix) {\n    _init_properties_longJs_kt__elc2w5();\n    if (radix < 2 || 36 < radix) {\n      throw Exception_init_$Create$_0('radix out of range: ' + radix);\n    }\n    if (isZero(_this__u8e3s4)) {\n      return '0';\n    }\n    if (isNegative(_this__u8e3s4)) {\n      if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {\n        var radixLong = fromInt(radix);\n        var div = _this__u8e3s4.div_et91rl_k$(radixLong);\n        var rem = subtract(multiply(div, radixLong), _this__u8e3s4).toInt_1tsl84_k$();\n        var tmp = toStringImpl(div, radix);\n        // Inline function 'kotlin.js.asDynamic' call\n        // Inline function 'kotlin.js.unsafeCast' call\n        return tmp + rem.toString(radix);\n      } else {\n        return '-' + toStringImpl(negate(_this__u8e3s4), radix);\n      }\n    }\n    var digitsPerTime = radix === 2 ? 31 : radix <= 10 ? 9 : radix <= 21 ? 7 : radix <= 35 ? 6 : 5;\n    var radixToPower = fromNumber(Math.pow(radix, digitsPerTime));\n    var rem_0 = _this__u8e3s4;\n    var result = '';\n    while (true) {\n      var remDiv = rem_0.div_et91rl_k$(radixToPower);\n      var intval = subtract(rem_0, multiply(remDiv, radixToPower)).toInt_1tsl84_k$();\n      // Inline function 'kotlin.js.asDynamic' call\n      // Inline function 'kotlin.js.unsafeCast' call\n      var digits = intval.toString(radix);\n      rem_0 = remDiv;\n      if (isZero(rem_0)) {\n        return digits + result;\n      } else {\n        while (digits.length < digitsPerTime) {\n          digits = '0' + digits;\n        }\n        result = digits + result;\n      }\n    }\n  }\n  function equalsLong(_this__u8e3s4, other) {\n    _init_properties_longJs_kt__elc2w5();\n    return _this__u8e3s4.high_1 === other.high_1 && _this__u8e3s4.low_1 === other.low_1;\n  }\n  function fromInt(value) {\n    _init_properties_longJs_kt__elc2w5();\n    return new Long(value, value < 0 ? -1 : 0);\n  }\n  function isNegative(_this__u8e3s4) {\n    _init_properties_longJs_kt__elc2w5();\n    return _this__u8e3s4.high_1 < 0;\n  }\n  function isZero(_this__u8e3s4) {\n    _init_properties_longJs_kt__elc2w5();\n    return _this__u8e3s4.high_1 === 0 && _this__u8e3s4.low_1 === 0;\n  }\n  function isOdd(_this__u8e3s4) {\n    _init_properties_longJs_kt__elc2w5();\n    return (_this__u8e3s4.low_1 & 1) === 1;\n  }\n  function negate(_this__u8e3s4) {\n    _init_properties_longJs_kt__elc2w5();\n    return _this__u8e3s4.unaryMinus_6uz0qp_k$();\n  }\n  function lessThan(_this__u8e3s4, other) {\n    _init_properties_longJs_kt__elc2w5();\n    return compare(_this__u8e3s4, other) < 0;\n  }\n  function fromNumber(value) {\n    _init_properties_longJs_kt__elc2w5();\n    if (isNaN_0(value)) {\n      return get_ZERO();\n    } else if (value <= -9.223372036854776E18) {\n      return get_MIN_VALUE();\n    } else if (value + 1 >= 9.223372036854776E18) {\n      return get_MAX_VALUE();\n    } else if (value < 0) {\n      return negate(fromNumber(-value));\n    } else {\n      var twoPwr32 = 4.294967296E9;\n      // Inline function 'kotlin.js.jsBitwiseOr' call\n      var tmp = value % twoPwr32 | 0;\n      // Inline function 'kotlin.js.jsBitwiseOr' call\n      var tmp$ret$1 = value / twoPwr32 | 0;\n      return new Long(tmp, tmp$ret$1);\n    }\n  }\n  function greaterThan(_this__u8e3s4, other) {\n    _init_properties_longJs_kt__elc2w5();\n    return compare(_this__u8e3s4, other) > 0;\n  }\n  function greaterThanOrEqual(_this__u8e3s4, other) {\n    _init_properties_longJs_kt__elc2w5();\n    return compare(_this__u8e3s4, other) >= 0;\n  }\n  function getLowBitsUnsigned(_this__u8e3s4) {\n    _init_properties_longJs_kt__elc2w5();\n    return _this__u8e3s4.low_1 >= 0 ? _this__u8e3s4.low_1 : 4.294967296E9 + _this__u8e3s4.low_1;\n  }\n  var properties_initialized_longJs_kt_4syf89;\n  function _init_properties_longJs_kt__elc2w5() {\n    if (!properties_initialized_longJs_kt_4syf89) {\n      properties_initialized_longJs_kt_4syf89 = true;\n      ZERO = fromInt(0);\n      ONE = fromInt(1);\n      NEG_ONE = fromInt(-1);\n      MAX_VALUE = new Long(-1, 2147483647);\n      MIN_VALUE = new Long(0, -2147483648);\n      TWO_PWR_24_ = fromInt(16777216);\n    }\n  }\n  function createMetadata(kind, name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity) {\n    var undef = VOID;\n    var iid = kind === 'interface' ? generateInterfaceId() : VOID;\n    return {kind: kind, simpleName: name, associatedObjectKey: associatedObjectKey, associatedObjects: associatedObjects, suspendArity: suspendArity, $kClass$: undef, defaultConstructor: defaultConstructor, iid: iid};\n  }\n  function generateInterfaceId() {\n    if (globalInterfaceId === VOID) {\n      globalInterfaceId = 0;\n    }\n    // Inline function 'kotlin.js.unsafeCast' call\n    globalInterfaceId = globalInterfaceId + 1 | 0;\n    // Inline function 'kotlin.js.unsafeCast' call\n    return globalInterfaceId;\n  }\n  var globalInterfaceId;\n  function initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {\n    if (!(parent == null)) {\n      ctor.prototype = Object.create(parent.prototype);\n      ctor.prototype.constructor = ctor;\n    }\n    var metadata = createMetadata(kind, name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity);\n    ctor.$metadata$ = metadata;\n    if (!(interfaces == null)) {\n      var receiver = !equals(metadata.iid, VOID) ? ctor : ctor.prototype;\n      receiver.$imask$ = implement(interfaces);\n    }\n  }\n  function initMetadataForClass(ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {\n    var kind = 'class';\n    initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects);\n  }\n  function initMetadataForObject(ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {\n    var kind = 'object';\n    initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects);\n  }\n  function initMetadataForInterface(ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {\n    var kind = 'interface';\n    initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects);\n  }\n  function initMetadataForLambda(ctor, parent, interfaces, suspendArity) {\n    initMetadataForClass(ctor, 'Lambda', VOID, parent, interfaces, suspendArity, VOID, VOID);\n  }\n  function initMetadataForCoroutine(ctor, parent, interfaces, suspendArity) {\n    initMetadataForClass(ctor, 'Coroutine', VOID, parent, interfaces, suspendArity, VOID, VOID);\n  }\n  function initMetadataForFunctionReference(ctor, parent, interfaces, suspendArity) {\n    initMetadataForClass(ctor, 'FunctionReference', VOID, parent, interfaces, suspendArity, VOID, VOID);\n  }\n  function initMetadataForCompanion(ctor, parent, interfaces, suspendArity) {\n    initMetadataForObject(ctor, 'Companion', VOID, parent, interfaces, suspendArity, VOID, VOID);\n  }\n  function isInterface(obj, iface) {\n    return isInterfaceImpl(obj, iface.$metadata$.iid);\n  }\n  function isInterfaceImpl(obj, iface) {\n    // Inline function 'kotlin.js.unsafeCast' call\n    var tmp0_elvis_lhs = obj.$imask$;\n    var tmp;\n    if (tmp0_elvis_lhs == null) {\n      return false;\n    } else {\n      tmp = tmp0_elvis_lhs;\n    }\n    var mask = tmp;\n    return isBitSet(mask, iface);\n  }\n  function isJsArray(obj) {\n    // Inline function 'kotlin.js.unsafeCast' call\n    return Array.isArray(obj);\n  }\n  function isArrayish(o) {\n    return isJsArray(o) || isView(o);\n  }\n  function calculateErrorInfo(proto) {\n    var tmp0_safe_receiver = proto.constructor;\n    var metadata = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.$metadata$;\n    var tmp2_safe_receiver = metadata == null ? null : metadata.errorInfo;\n    if (tmp2_safe_receiver == null)\n      null;\n    else {\n      // Inline function 'kotlin.let' call\n      return tmp2_safe_receiver;\n    }\n    var result = 0;\n    if (hasProp(proto, 'message'))\n      result = result | 1;\n    if (hasProp(proto, 'cause'))\n      result = result | 2;\n    if (!(result === 3)) {\n      var parentProto = getPrototypeOf(proto);\n      if (parentProto != Error.prototype) {\n        result = result | calculateErrorInfo(parentProto);\n      }\n    }\n    if (!(metadata == null)) {\n      metadata.errorInfo = result;\n    }\n    return result;\n  }\n  function hasProp(proto, propName) {\n    return proto.hasOwnProperty(propName);\n  }\n  function getPrototypeOf(obj) {\n    return Object.getPrototypeOf(obj);\n  }\n  function get_VOID() {\n    _init_properties_void_kt__3zg9as();\n    return VOID;\n  }\n  var VOID;\n  var properties_initialized_void_kt_e4ret2;\n  function _init_properties_void_kt__3zg9as() {\n    if (!properties_initialized_void_kt_e4ret2) {\n      properties_initialized_void_kt_e4ret2 = true;\n      VOID = void 0;\n    }\n  }\n  function Comparator() {\n  }\n  function isNaN_0(_this__u8e3s4) {\n    return !(_this__u8e3s4 === _this__u8e3s4);\n  }\n  function Unit() {\n  }\n  protoOf(Unit).toString = function () {\n    return 'kotlin.Unit';\n  };\n  var Unit_instance;\n  function Unit_getInstance() {\n    return Unit_instance;\n  }\n  function get_output() {\n    _init_properties_console_kt__rfg7jv();\n    return output;\n  }\n  var output;\n  function BaseOutput() {\n  }\n  protoOf(BaseOutput).println_uvj9r3_k$ = function () {\n    this.print_o1pwgy_k$('\\n');\n  };\n  protoOf(BaseOutput).println_ghnc0w_k$ = function (message) {\n    this.print_o1pwgy_k$(message);\n    this.println_uvj9r3_k$();\n  };\n  function NodeJsOutput(outputStream) {\n    BaseOutput.call(this);\n    this.outputStream_1 = outputStream;\n  }\n  protoOf(NodeJsOutput).print_o1pwgy_k$ = function (message) {\n    // Inline function 'kotlin.io.String' call\n    var tmp1_elvis_lhs = message == null ? null : toString_0(message);\n    var messageString = tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;\n    this.outputStream_1.write(messageString);\n  };\n  function BufferedOutputToConsoleLog() {\n    BufferedOutput.call(this);\n  }\n  protoOf(BufferedOutputToConsoleLog).print_o1pwgy_k$ = function (message) {\n    // Inline function 'kotlin.io.String' call\n    var tmp1_elvis_lhs = message == null ? null : toString_0(message);\n    var s = tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;\n    // Inline function 'kotlin.text.nativeLastIndexOf' call\n    // Inline function 'kotlin.js.asDynamic' call\n    var i = s.lastIndexOf('\\n', 0);\n    if (i >= 0) {\n      this.buffer_1 = this.buffer_1 + substring(s, 0, i);\n      this.flush_shahbo_k$();\n      s = substring_0(s, i + 1 | 0);\n    }\n    this.buffer_1 = this.buffer_1 + s;\n  };\n  protoOf(BufferedOutputToConsoleLog).flush_shahbo_k$ = function () {\n    console.log(this.buffer_1);\n    this.buffer_1 = '';\n  };\n  function BufferedOutput() {\n    BaseOutput.call(this);\n    this.buffer_1 = '';\n  }\n  protoOf(BufferedOutput).print_o1pwgy_k$ = function (message) {\n    var tmp = this;\n    var tmp_0 = this.buffer_1;\n    // Inline function 'kotlin.io.String' call\n    var tmp1_elvis_lhs = message == null ? null : toString_0(message);\n    tmp.buffer_1 = tmp_0 + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);\n  };\n  function println(message) {\n    _init_properties_console_kt__rfg7jv();\n    get_output().println_ghnc0w_k$(message);\n  }\n  var properties_initialized_console_kt_gll9dl;\n  function _init_properties_console_kt__rfg7jv() {\n    if (!properties_initialized_console_kt_gll9dl) {\n      properties_initialized_console_kt_gll9dl = true;\n      // Inline function 'kotlin.run' call\n      var isNode = typeof process !== 'undefined' && process.versions && !!process.versions.node;\n      output = isNode ? new NodeJsOutput(process.stdout) : new BufferedOutputToConsoleLog();\n    }\n  }\n  function Exception_init_$Init$($this) {\n    extendThrowable($this);\n    Exception.call($this);\n    return $this;\n  }\n  function Exception_init_$Create$() {\n    var tmp = Exception_init_$Init$(objectCreate(protoOf(Exception)));\n    captureStack(tmp, Exception_init_$Create$);\n    return tmp;\n  }\n  function Exception_init_$Init$_0(message, $this) {\n    extendThrowable($this, message);\n    Exception.call($this);\n    return $this;\n  }\n  function Exception_init_$Create$_0(message) {\n    var tmp = Exception_init_$Init$_0(message, objectCreate(protoOf(Exception)));\n    captureStack(tmp, Exception_init_$Create$_0);\n    return tmp;\n  }\n  function Exception() {\n    captureStack(this, Exception);\n  }\n  function RuntimeException_init_$Init$($this) {\n    Exception_init_$Init$($this);\n    RuntimeException.call($this);\n    return $this;\n  }\n  function RuntimeException_init_$Create$() {\n    var tmp = RuntimeException_init_$Init$(objectCreate(protoOf(RuntimeException)));\n    captureStack(tmp, RuntimeException_init_$Create$);\n    return tmp;\n  }\n  function RuntimeException() {\n    captureStack(this, RuntimeException);\n  }\n  function ClassCastException_init_$Init$($this) {\n    RuntimeException_init_$Init$($this);\n    ClassCastException.call($this);\n    return $this;\n  }\n  function ClassCastException_init_$Create$() {\n    var tmp = ClassCastException_init_$Init$(objectCreate(protoOf(ClassCastException)));\n    captureStack(tmp, ClassCastException_init_$Create$);\n    return tmp;\n  }\n  function ClassCastException() {\n    captureStack(this, ClassCastException);\n  }\n  function uppercaseChar(_this__u8e3s4) {\n    // Inline function 'kotlin.text.uppercase' call\n    // Inline function 'kotlin.js.asDynamic' call\n    // Inline function 'kotlin.js.unsafeCast' call\n    var uppercase = toString(_this__u8e3s4).toUpperCase();\n    return uppercase.length > 1 ? _this__u8e3s4 : charCodeAt(uppercase, 0);\n  }\n  var STRING_CASE_INSENSITIVE_ORDER;\n  function substring(_this__u8e3s4, startIndex, endIndex) {\n    _init_properties_stringJs_kt__bg7zye();\n    // Inline function 'kotlin.js.asDynamic' call\n    return _this__u8e3s4.substring(startIndex, endIndex);\n  }\n  function substring_0(_this__u8e3s4, startIndex) {\n    _init_properties_stringJs_kt__bg7zye();\n    // Inline function 'kotlin.js.asDynamic' call\n    return _this__u8e3s4.substring(startIndex);\n  }\n  function compareTo_0(_this__u8e3s4, other, ignoreCase) {\n    ignoreCase = ignoreCase === VOID ? false : ignoreCase;\n    _init_properties_stringJs_kt__bg7zye();\n    if (ignoreCase) {\n      var n1 = _this__u8e3s4.length;\n      var n2 = other.length;\n      // Inline function 'kotlin.comparisons.minOf' call\n      var min = Math.min(n1, n2);\n      if (min === 0)\n        return n1 - n2 | 0;\n      var inductionVariable = 0;\n      if (inductionVariable < min)\n        do {\n          var index = inductionVariable;\n          inductionVariable = inductionVariable + 1 | 0;\n          var thisChar = charCodeAt(_this__u8e3s4, index);\n          var otherChar = charCodeAt(other, index);\n          if (!(thisChar === otherChar)) {\n            thisChar = uppercaseChar(thisChar);\n            otherChar = uppercaseChar(otherChar);\n            if (!(thisChar === otherChar)) {\n              // Inline function 'kotlin.text.lowercaseChar' call\n              // Inline function 'kotlin.text.lowercase' call\n              var this_0 = thisChar;\n              // Inline function 'kotlin.js.asDynamic' call\n              // Inline function 'kotlin.js.unsafeCast' call\n              var tmp$ret$3 = toString(this_0).toLowerCase();\n              thisChar = charCodeAt(tmp$ret$3, 0);\n              // Inline function 'kotlin.text.lowercaseChar' call\n              // Inline function 'kotlin.text.lowercase' call\n              var this_1 = otherChar;\n              // Inline function 'kotlin.js.asDynamic' call\n              // Inline function 'kotlin.js.unsafeCast' call\n              var tmp$ret$7 = toString(this_1).toLowerCase();\n              otherChar = charCodeAt(tmp$ret$7, 0);\n              if (!(thisChar === otherChar)) {\n                return Char__compareTo_impl_ypi4mb(thisChar, otherChar);\n              }\n            }\n          }\n        }\n         while (inductionVariable < min);\n      return n1 - n2 | 0;\n    } else {\n      return compareTo(_this__u8e3s4, other);\n    }\n  }\n  function sam$kotlin_Comparator$0(function_0) {\n    this.function_1 = function_0;\n  }\n  protoOf(sam$kotlin_Comparator$0).compare_bczr_k$ = function (a, b) {\n    return this.function_1(a, b);\n  };\n  protoOf(sam$kotlin_Comparator$0).compare = function (a, b) {\n    return this.compare_bczr_k$(a, b);\n  };\n  protoOf(sam$kotlin_Comparator$0).getFunctionDelegate_jtodtf_k$ = function () {\n    return this.function_1;\n  };\n  protoOf(sam$kotlin_Comparator$0).equals = function (other) {\n    var tmp;\n    if (!(other == null) ? isInterface(other, Comparator) : false) {\n      var tmp_0;\n      if (!(other == null) ? isInterface(other, FunctionAdapter) : false) {\n        tmp_0 = equals(this.getFunctionDelegate_jtodtf_k$(), other.getFunctionDelegate_jtodtf_k$());\n      } else {\n        tmp_0 = false;\n      }\n      tmp = tmp_0;\n    } else {\n      tmp = false;\n    }\n    return tmp;\n  };\n  function STRING_CASE_INSENSITIVE_ORDER$lambda(a, b) {\n    _init_properties_stringJs_kt__bg7zye();\n    return compareTo_0(a, b, true);\n  }\n  var properties_initialized_stringJs_kt_nta8o4;\n  function _init_properties_stringJs_kt__bg7zye() {\n    if (!properties_initialized_stringJs_kt_nta8o4) {\n      properties_initialized_stringJs_kt_nta8o4 = true;\n      var tmp = STRING_CASE_INSENSITIVE_ORDER$lambda;\n      STRING_CASE_INSENSITIVE_ORDER = new sam$kotlin_Comparator$0(tmp);\n    }\n  }\n  function main() {\n    var a = 'abc';\n    var b = a;\n    println(toString(main$firstChar(a)) + ' == ' + toString(main$firstChar(b)));\n    println('' + a.charCodeAt(0, 'dummy argument') + ' == ' + Char__toInt_impl_vasixd(charCodeAt(b, 0)));\n    println(a.charAt(1).repeat(3));\n    println('2 + 2 = ' + main$plus(2));\n    println(\"'2' + 2 = \" + main$plus('2'));\n  }\n  function main$firstChar(s) {\n    return charCodeAt(s, 0);\n  }\n  function main$plus(v) {\n    return v + 2;\n  }\n  function mainWrapper() {\n    main();\n  }\n  //region block: init\n  Unit_instance = new Unit();\n  //endregion\nif (typeof get_output !== \"undefined\") {\n  get_output();\n  output = new BufferedOutput();\n  _.output = get_output();\n}\n  mainWrapper();\n  return _;\n}));\nplayground.output?.buffer_1;\n\n","exception":null,"errors":{"File.kt":[{"interval":{"start":{"line":9,"ch":58},"end":{"line":9,"ch":63}},"message":"'fun toInt(): Int' is deprecated. Conversion of Char to Number is deprecated. Use Char.code property instead.","severity":"WARNING","className":"WARNING"}]},"text":""}